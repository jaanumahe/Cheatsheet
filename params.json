{
  "name": "GIT Cheatsheet",
  "tagline": "",
  "body": "### Welcome to Git CheatSheet\r\n\r\n### Setup\r\nGoto Terminal(For Mac)/Command Prompt(For Windows)\r\n\r\nNavigate to /Users/userDirectory\r\n1. Create .ssh directory (mkdir .ssh)\r\n2. Run this command to generate ssh keys from the .ssh directory \r\ncd .ssh\r\nssh-keygen -t rsa -C “<YOUR NAME For Identification – This will appear at the end of the SSH Key>”\r\n3. It might ask to enter the name of the file (default will be id_rsa), just press enter to proceed with the defaults. It will create two keys, private(id_rsa) and public(id_rsa.pub)\r\n4. Copy the public key (cat id_rsa.pub) \r\n5. Goto GitHub->Login->Settings->SSH Keys->Add SSH Key -> Name it and Save your SSH.\r\n6. You should receive an email once its added successfully.\r\n7. Try to clone any repository to verify.\r\n\r\n### General GIT Commands : \r\n\r\n### Cloning GIT Repository : \r\n`git clone <SSH Clone URL of the project> `\r\n\r\nThis will clone the default branch set.\r\n\r\n### TO clone specific branch :\r\n`git clone –b <branchName> <SSH Clone URL of the project>` \r\n\r\n\r\n### To check status of your local repository : (uncommitted changes)\r\n`git status`\r\n\r\n### To see which branch you are in:\r\n`git branch`\r\n\r\n### To add all your uncommitted files/changes:\r\n`git add . `\r\n\r\n### To add specific uncommitted files:\r\n`git add <fileName1> <fileName2>`\r\n\r\n\r\n### To commit added files:\r\n`git commit –m “Commit Message\" `\r\n\r\n\r\n### To checkin the changes into GIT:\r\n`git push origin <branchName>`\r\n\r\n### Default : git push origin master\r\n`If you have just master branch, just git push should suffice. `\r\n\r\n### To checkout from GIT (Before pushing the code into GIT repo, its a standard practice to always run this command first, following by commit and push): \r\n`git pull origin <branchName>`\r\n\r\n### Default : git pull origin master\r\n`If you have just master branch, just git pull should suffice.`\r\n\r\n### To switch between branches : \r\n`git checkout <branchName>`\r\n\r\n### To Fork repository : (You can fork any GIT repo for your own purpose, which will create cloned copy under your username)\r\nGoto any repo in GIT and click “FORK\"\r\nFYI – it is possible to merge back the forked repo with our changes to original repo.\r\n\r\n#### DELETE A BRANCH FROM COMMANDLINE : \r\n`git push origin --delete BRANCHNAME`\r\n\r\n#### CREATE EMPTY BRANCH :\r\n\r\n`git checkout --orphan BRANCHNAME`\r\n\r\n#### EMPTY ALL FILES IN A BRANCH :\r\n\r\n`rm -rf * \r\ngit status\r\ngit add . \r\ngit commit -m \"Message\"\r\ngit push -u origin branchname`\r\n\r\n\r\n[Refer GIT Documentation](https://git-scm.com/book/en/v2) \r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}